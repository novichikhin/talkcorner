version: "3"

services:
  server:
    build:
      context: ./
      dockerfile: docker/server/Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://server:${SERVER_PORT}/api/v1/healthcheck/" ]
      interval: 10s
      timeout: 5s
      retries: 5

  broadcaster-email:
    build:
      context: ./
      dockerfile: docker/email-broadcaster/Dockerfile
    env_file:
      - .env
    depends_on:
      server:
        condition: service_healthy
      nats:
        condition: service_started

  postgres:
    image: postgres:14
    volumes:
      - ./postgres/data:/var/lib/postgresql/data/:z
    restart: always
    env_file:
      - .env
    ports:
      - "${PG_PORT}:${PG_PORT}"
    environment:
      - POSTGRES_HOST=${PG_HOST}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats
    volumes:
      - ./nats/data:/etc/nats
    restart: always
    env_file:
      - .env
    ports:
      - "${NATS_CLIENT_PORT}:${NATS_CLIENT_PORT}"
      - "${NATS_HTTP_PORT}:${NATS_HTTP_PORT}"
      - "${NATS_ROUTING_PORT}:${NATS_ROUTING_PORT}"
    command: ["-js", "--user", "${NATS_USER}", "--pass", "${NATS_PASSWORD}"]